name: Build and Test Wheel

on: [push]

jobs:
  build_wheel_x86_64:
    name: "Build ${{ matrix.pyver }} on ${{ matrix.os }}"
    strategy:
      matrix:
        pyver: ['3.6', '3.7', '3.8', '3.9']
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Install dependencies
        run: |
          python -m pip install --disable-pip-version-check --upgrade pip
          pip install -U -r requirements.txt -r requirements-dev.txt
          pip install auditwheel
          #Install locally to support tests
          pip install -e .
      - name: Building source distribution
        run: python setup.py sdist     
      - name: Building wheel
        run: python setup.py bdist_wheel
      - name: Repair wheel
        if: matrix.os == 'ubuntu-latest'
        run: auditwheel repair dist/*.whl --wheel-dir dist --plat linux_x86_64
      - name: Test with pytest
        run: pytest      
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl
      - name: Deploy Wheel
        run: |
            pip install twine
            ls dist
            twine upload -u $PYPI_USER -p $PYPI_PASSWORD --skip-existing dist/*
  build_wheel_aarch64:
    name: "Build aarch64 ${{ matrix.pyver }}"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - run: |
         docker run --rm --privileged hypriot/qemu-register
    - uses: docker://quay.io/pypa/manylinux2014_aarch64
      with:
        args: |
            bash -c "${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            pip install --upgrade setuptools && \
            python -m pip install --disable-pip-version-check --upgrade pip && \
            pip install -U -r requirements.txt -r requirements-dev.txt && \
            python setup.py bdist_wheel && \
            pip install -e . && \
            auditwheel repair dist/*.whl --wheel-dir dist && \
            pytest && \
            deactivate"
    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        path: dist/*.whl
    - name: Deploy Wheel
      run: |
           pip install twine
           ls dist
           twine upload -u $PYPI_USER -p $PYPI_PASSWORD --skip-existing dist/*
